pipeline {
    agent any
    tools {
        maven 'default'
        dockerTool 'default'
        allure 'allure'
    }
    stages {
        stage ('Pre-Build Info') {
            steps {
            	sh 'mvn --version'
                sh 'java --version'
                sh 'docker --version'
                sh 'docker-compose --version'
            }
        }
        stage ('Build') {
            steps {                        
                sh 'cd order-service && ./mvnw clean package -DskipTests'
                sleep(time:1,unit:"SECONDS") 
            }
        }
        stage ('Unit Test'){
            steps {
                sh 'cd order-service && ./mvnw test -Dgroups="unit-tests"'
                sleep(time:1,unit:"SECONDS") 
            }
        }
        stage ('Deploy to Development Environment'){
            steps {
                sh 'cd order-service/docker'
                sh 'ls -la'
                sh 'cd order-service/docker && docker-compose -p curso-automacao -f docker-compose-dev.yml up --build --force-recreate -d dev-order-service'
                sleep(time:1,unit:"SECONDS") 
            }
        }
        stage ('Integration Test'){
            steps {
                //sh 'cd order-service && ./mvnw test -Dgroups="integration-tests"'
                sleep(time:1,unit:"SECONDS") 
                sh 'cd test-project-bdd-junit4-rest && mvn test -D"cucumber.filter.tags=@orders and @integration-tests" -DtestFailureIgnore=true' 
            }
            post {
          		always {
            		script {
              			allure([
                			includeProperties: false,
                			jdk: '',
                			properties: [],
                			reportBuildPolicy: 'ALWAYS',
                			results: [[path: 'test-project-bdd-junit4-rest/target/allure-results']]
						])
					}
          		}
          	}
        }
        stage ('Deploy to Test Environment'){
            steps {
                sh 'cd order-service/docker'
                sh 'ls -la'
                //sh 'cd order-service/docker && docker-compose -p curso-automacao -f docker-compose-test.yml up --build --force-recreate -d test-order-service'
                //sleep(time:1,unit:"SECONDS") 
            }
        }
        stage ('System and Acceptance Test'){
            steps {
                //sh 'cd order-service && ./mvnw test -Dgroups="system-tests"'
                sh 'cd test-project-bdd-junit4-web && mvn test -D"cucumber.filter.tags=@orders and @system-tests" -DtestFailureIgnore=true' 

                //sh 'cd order-service && ./mvnw test -Dgroups="acceptance-tests"'
                sh 'cd test-project-bdd-junit4-web && mvn test -D"cucumber.filter.tags=@orders and @acceptance-tests" -DtestFailureIgnore=true' 

                sleep(time:1,unit:"SECONDS") 
            }
            post {
          		always {
            		script {
              			allure([
                			includeProperties: false,
                			jdk: '',
                			properties: [],
                			reportBuildPolicy: 'ALWAYS',
                			results: [[path: 'test-project-bdd-junit4-web/target/allure-results']]
						])
					}
          		}
          	}
        }
        stage ('Deploy to Production Environment'){
            steps {
                sh 'cd order-service/docker'
                sh 'ls -la'
                //sh 'cd order-service/docker && docker-compose -p curso-automacao -f docker-compose-prod.yml up --build --force-recreate -d prod-order-service'
                //sleep(time:1,unit:"SECONDS") 
            }
        }
    }   
}